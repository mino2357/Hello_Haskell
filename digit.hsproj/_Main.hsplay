-- Haskell Playground 1.0
digitList 123



myList = take 10 $ digitSumSeq 153

--mapM_ print $ myList

foldl' max 0 myList

n = 100

pm = [ (-1)^i | i<-[2..]]
oddpm = take n $ multiList pm [1,3..]
invOddPm = fmap (4/) $ fmap fromIntegral oddpm
invOddPm
mapM_ print $ scanl1 (\x y -> x + y) invOddPm

--print $ zip [m..n] $ fmap length $ fmap calcDigitRoot [m..n]